{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Project 2\\\\client\\\\src\\\\components\\\\dashboard\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    // Fetch cart items with item details from backend\n    fetch('http://localhost:3000/cart', {\n      credentials: 'include'\n    }).then(response => response.json()).then(data => setCartItems(data));\n  }, []);\n  const handleRemoveItem = itemId => {\n    // Remove item from the cart in the backend\n    fetch(`http://localhost:3000/cart/${itemId}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        setCartItems(prevItems => prevItems.filter(item => item.id !== itemId));\n      } else {\n        alert('Failed to remove item');\n      }\n    });\n  };\n  const handleQuantityChange = (itemId, newQuantity) => {\n    // Update the quantity in the database\n    fetch(`http://localhost:3000/cart`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        itemId,\n        quantity: newQuantity\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Update the quantity locally after successfully updating in the backend\n        setCartItems(prevItems => prevItems.map(item => item.id === itemId ? {\n          ...item,\n          quantity: newQuantity\n        } : item));\n      } else {\n        alert('Failed to update quantity');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), cartItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cart-items\",\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"item-name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-attributes\",\n            children: [\"Description: \", item.description || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 59\n            }, this), \"Size: \", item.size || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 45\n            }, this), item.stock > 0 ? 'In Stock' : 'Out of Stock']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"price\",\n          children: [\"$\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: item.quantity,\n            onChange: e => handleQuantityChange(item.id, parseInt(e.target.value)),\n            children: [...Array(item.stock).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num + 1,\n              children: num + 1\n            }, num + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total\",\n          children: [\"$\", (item.price * item.quantity).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveItem(item.id),\n          className: \"remove-button\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-cart\",\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","fetch","credentials","then","response","json","data","handleRemoveItem","itemId","method","ok","prevItems","filter","item","id","alert","handleQuantityChange","newQuantity","headers","body","JSON","stringify","quantity","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","name","description","size","stock","price","value","onChange","e","parseInt","target","Array","keys","num","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Project 2/client/src/components/dashboard/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/Cart.css'; \r\n\r\nconst Cart = () => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch cart items with item details from backend\r\n    fetch('http://localhost:3000/cart', { credentials: 'include' })\r\n      .then(response => response.json())\r\n      .then(data => setCartItems(data));\r\n  }, []);\r\n\r\n  const handleRemoveItem = (itemId) => {\r\n    // Remove item from the cart in the backend\r\n    fetch(`http://localhost:3000/cart/${itemId}`, {\r\n      method: 'DELETE',\r\n      credentials: 'include'\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== itemId));\r\n      } else {\r\n        alert('Failed to remove item');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleQuantityChange = (itemId, newQuantity) => {\r\n    // Update the quantity in the database\r\n    fetch(`http://localhost:3000/cart`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',\r\n      body: JSON.stringify({ itemId, quantity: newQuantity })\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        // Update the quantity locally after successfully updating in the backend\r\n        setCartItems(prevItems =>\r\n          prevItems.map(item =>\r\n            item.id === itemId ? { ...item, quantity: newQuantity } : item\r\n          )\r\n        );\r\n      } else {\r\n        alert('Failed to update quantity');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h2>Your Cart</h2>\r\n      {cartItems.length > 0 ? (\r\n        <ul className=\"cart-items\">\r\n          {cartItems.map(item => (\r\n            <li key={item.id} className=\"cart-item\">\r\n              <div className=\"cart-item-details\">\r\n                <span className=\"item-name\">{item.name}</span>\r\n                <div className=\"item-attributes\">\r\n                  Description: {item.description || 'N/A'}<br />\r\n                  Size: {item.size || 'N/A'}<br />\r\n                  {item.stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                </div>\r\n              </div>\r\n              <span className=\"price\">${item.price}</span>\r\n              <div className=\"quantity-select\">\r\n                <select\r\n                  value={item.quantity}\r\n                  onChange={e => handleQuantityChange(item.id, parseInt(e.target.value))}\r\n                >\r\n                  {/* Generate options based on the stock available */}\r\n                  {[...Array(item.stock).keys()].map(num => (\r\n                    <option key={num + 1} value={num + 1}>{num + 1}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <span className=\"total\">${(item.price * item.quantity).toFixed(2)}</span>\r\n              <button onClick={() => handleRemoveItem(item.id)} className=\"remove-button\">Remove</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"empty-cart\">Your cart is empty.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}