{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Project 2\\\\client\\\\src\\\\components\\\\dashboard\\\\ManageStore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/ManageStore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageStore = ({\n  fetchStore\n}) => {\n  _s();\n  const [stores, setStores] = useState([]); // To store the list of user's stores\n  const [storeData, setStoreData] = useState({\n    name: '',\n    description: ''\n  });\n\n  // Fetch user's stores when the component loads\n  useEffect(() => {\n    fetchUserStores();\n  }, []);\n  const fetchUserStores = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/user/stores', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Stores received from backend:', data); // Debugging log\n        setStores(data); // Set the fetched stores\n      } else {\n        console.error('Failed to fetch stores');\n      }\n    } catch (error) {\n      console.error('Error fetching stores:', error);\n    }\n  };\n  const handleStoreSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/store', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(storeData)\n      });\n      if (response.ok) {\n        console.log('Store created successfully');\n        fetchUserStores(); // Refresh the list of stores after creating a new one\n        setStoreData({\n          name: '',\n          description: ''\n        }); // Clear the form\n      } else {\n        console.error('Failed to create store');\n      }\n    } catch (error) {\n      console.error('Error creating store:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"manage-store\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Your Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), stores.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Stores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), \" - \", store.description]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You don't have any stores yet. Create a new store below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleStoreSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Store Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: storeData.name,\n        onChange: e => setStoreData({\n          ...storeData,\n          name: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: storeData.description,\n        onChange: e => setStoreData({\n          ...storeData,\n          description: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageStore, \"PZBn5Pw7GBW/NIePH9lMiJ7WcKA=\");\n_c = ManageStore;\nexport default ManageStore;\nvar _c;\n$RefreshReg$(_c, \"ManageStore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ManageStore","fetchStore","_s","stores","setStores","storeData","setStoreData","name","description","fetchUserStores","response","fetch","credentials","ok","data","json","console","log","error","handleStoreSubmit","e","preventDefault","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","store","id","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Project 2/client/src/components/dashboard/ManageStore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/ManageStore.css';\r\nconst ManageStore = ({ fetchStore }) => {\r\n  const [stores, setStores] = useState([]);  // To store the list of user's stores\r\n  const [storeData, setStoreData] = useState({ name: '', description: '' });\r\n\r\n  // Fetch user's stores when the component loads\r\n  useEffect(() => {\r\n    fetchUserStores();\r\n  }, []);\r\n\r\n  const fetchUserStores = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/user/stores', { credentials: 'include' });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Stores received from backend:', data);  // Debugging log\r\n        setStores(data);  // Set the fetched stores\r\n      } else {\r\n        console.error('Failed to fetch stores');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching stores:', error);\r\n    }\r\n  };\r\n\r\n  const handleStoreSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/store', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify(storeData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Store created successfully');\r\n        fetchUserStores();  // Refresh the list of stores after creating a new one\r\n        setStoreData({ name: '', description: '' });  // Clear the form\r\n      } else {\r\n        console.error('Failed to create store');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating store:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"manage-store\">\r\n      <h2>Manage Your Stores</h2>\r\n\r\n      {/* Show user's stores */}\r\n      {stores.length > 0 ? (\r\n        <div>\r\n          <h3>Your Stores</h3>\r\n          <ul>\r\n            {stores.map((store) => (\r\n              <li key={store.id}>\r\n                <strong>{store.name}</strong> - {store.description}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>You don't have any stores yet. Create a new store below.</p>\r\n      )}\r\n\r\n      {/* Form to create a new store */}\r\n      <form onSubmit={handleStoreSubmit}>\r\n        <label>Store Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={storeData.name}\r\n          onChange={(e) => setStoreData({ ...storeData, name: e.target.value })}\r\n          required\r\n        />\r\n        <label>Description:</label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={storeData.description}\r\n          onChange={(e) => setStoreData({ ...storeData, description: e.target.value })}\r\n          required\r\n        ></textarea>\r\n        <button type=\"submit\">Create Store</button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ManageStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}